*** Question 6 ***
 For question 6 I created a stack linked list to answer the question that was asked. The first thing that I created was the node class. This class will allow for the linked list type stack to be created. The data type will be char because the stack needs to take in char elements to hold the words. The StackLinkedList class will build from the nodes to create the stack linked list.
	In the StackLinkedList class I have a default and a destructor. The functions isEmptyStack and isFullStack are two functions that will help me determine if the stack is either empty or is full. The isEmptyStack is to help in situations when I might not be sure if the stack is empty or not. The functions pop and push will add or delete elements from the stack. Push adds elements to the top, while pop will take out the element from the top. The push function is key to solving this problem. The way that push is set up, it will add the letters of the words backwards, allowing for the words to be printed backwards. The print function prints the data from the first element to the nullptr.
The main has a demonstration of how the stack linked list would work 
